name: Build, Test, Deploy with Docker Hub + Slack

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  IMAGE_NAME: playwright-docker-e2e-tests

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v4

      - name: üõ†Ô∏è Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: üîê Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: üèó Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  test:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v3

      - name: üîß Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
          cache: true

      - name: üîê Create .env file from GitHub Secrets
        run: |
          echo "BEARER_TOKEN=${{ secrets.BEARER_TOKEN }}" >> .env
          echo "GITHUB_USER=${{ secrets.GITHUB_USER }}" >> .env
          echo "SLACK_WEBHOOK=${{ secrets.SLACK_WEBHOOK }}" >> .env
          echo "DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}" >> .env
          echo "DOCKER_PASSWORD=${{ secrets.DOCKER_PASSWORD }}" >> .env

      - name: ‚úÖ Run Go + Playwright tests
        run: |
          docker run --rm \
            -v $(pwd)/playwright-report:/app/playwright-report \
            -v $(pwd)/report.html:/app/report.html \
            --env-file .env \
            ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest

      - name: üìä Upload test artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: |
            report.html
            playwright-report/
          retention-days: 7

  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v4

      - name: üîê Restore kubeconfig
        run: |
          echo "${{ secrets.KUBECONFIG_B64 }}" | base64 -d > $HOME/.kube/config
          chmod 600 $HOME/.kube/config
          echo "KUBECONFIG=$HOME/.kube/config" >> $GITHUB_ENV

      - name: üöÄ Deploy to Kubernetes
        run: |
          kubectl config use-context minikube
          kubectl apply -f k8s/deployment.yml
          kubectl apply -f k8s/service.yml

  notify:
    runs-on: ubuntu-latest
    needs: [build, test, deploy]
    if: always()

    steps:
      - name: üì£ Send Slack Notification
        run: |
          STATUS="${{ needs.test.result }}"
          if [ "$STATUS" = "success" ]; then
            TEXT="‚úÖ *CI/CD Passed* for \`${{ github.repository }}\` (Commit: ${{ github.sha }})"
          else
            TEXT="‚ùå *CI/CD Failed* for \`${{ github.repository }}\` (Commit: ${{ github.sha }})"
          fi
          curl -X POST -H 'Content-type: application/json' \
            --data "{\"text\": \"$TEXT\"}" \
            "${{ secrets.SLACK_WEBHOOK }}"
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}